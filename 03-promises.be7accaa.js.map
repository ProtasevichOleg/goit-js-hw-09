{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEO,SAASC,EAAoBC,EAAKC,GACvCD,EAAIE,iBAEJ,IAAgCC,EAIlC,SAAuBF,GACrB,IAAQG,EAAiBH,EAAKI,cAAc,uBAApCC,MACAC,EAAgBN,EAAKI,cAAc,sBAAnCC,MACAE,EAAkBP,EAAKI,cAAc,wBAArCC,MAER,MAAO,CACLF,MAAOK,SAASL,GAChBG,KAAME,SAASF,GACfC,OAAQC,SAASD,G,CAZaE,CAAcT,IAgBhD,SAAyBG,EAAOG,EAAMC,GACpC,IAAK,IAAIG,EAAI,EAAGA,GAAKH,EAAQG,GAAK,EAChCC,EAAcD,EAAGP,GAASO,EAAI,GAAKJ,GAChCM,KAAKC,GACLC,MAAMC,E,CAnBXC,CADgCd,EAAxBC,MAAwBD,EAAjBI,KAAiBJ,EAAXK,O,CAwBvB,SAASM,EAAiBI,G,IAAEC,EAAFD,EAAEC,SAAUf,EAAZc,EAAYd,MACpCgB,EAAAvB,GAASwB,OAAOC,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANnB,EAAM,M,CAGxE,SAASY,EAAeE,G,IAAEC,EAAFD,EAAEC,SAAUf,EAAZc,EAAYd,MAClCgB,EAAAvB,GAASwB,OAAOG,QAAQ,sBAAqCD,OAAfJ,EAAS,QAAYI,OAANnB,EAAM,M,CAGrE,SAASQ,EAAcO,EAAUf,GAC/B,OAAO,IAAIqB,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEP,WAAUf,UAEpBuB,EAAO,CAAER,WAAUf,S,GAEpBA,E,IC1CP,IAAM2B,EAAOC,SAAS3B,cAAc,SACpC0B,EAAKE,iBAAiB,UAAU,SAAAjC,G,OAAOD,EAAoBC,EAAK+B,E","sources":["src/js/utils/promiseHelpers.js","src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nexport function onPromiseFormSubmit(evt, form) {\n  evt.preventDefault();\n\n  const { delay, step, amount } = getFormValues(form);\n  processPromises(delay, step, amount);\n}\n\nfunction getFormValues(form) {\n  const { value: delay } = form.querySelector('input[name=\"delay\"]');\n  const { value: step } = form.querySelector('input[name=\"step\"]');\n  const { value: amount } = form.querySelector('input[name=\"amount\"]');\n\n  return {\n    delay: parseInt(delay),\n    step: parseInt(step),\n    amount: parseInt(amount),\n  };\n}\n\nfunction processPromises(delay, step, amount) {\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay + (i - 1) * step)\n      .then(onPromiseSuccess)\n      .catch(onPromiseError);\n  }\n}\n\nfunction onPromiseSuccess({ position, delay }) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onPromiseError({ position, delay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n","// ../03-promises.js\n\nimport { onPromiseFormSubmit } from './utils/promiseHelpers';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', evt => onPromiseFormSubmit(evt, form));\n"],"names":["$6JpON","parcelRequire","$ceefc869aa1472f5$export$f80a49ddebbfccd0","evt","form","preventDefault","ref","delay","querySelector","value","step","amount","parseInt","$ceefc869aa1472f5$var$getFormValues","i","$ceefc869aa1472f5$var$createPromise","then","$ceefc869aa1472f5$var$onPromiseSuccess","catch","$ceefc869aa1472f5$var$onPromiseError","$ceefc869aa1472f5$var$processPromises","param","position","$parcel$interopDefault","Notify","success","concat","failure","Promise","resolve","reject","setTimeout","Math","random","$ce04d3a99e08e73b$var$form","document","addEventListener"],"version":3,"file":"03-promises.be7accaa.js.map"}